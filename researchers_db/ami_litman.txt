Recent papers for Ami Litman:

2013: 17. ^Alkali-Metal Corrosion of High-Temperature Materials
Abstract: The purpose of this program is to investigate the chemical and metallurgical effects produced in structural materials during exposure to alkaU metals. Our experiments are designed to guide the selection of containment materials for both sodium-cooled fast breeder reactor (LMFBR) systems and lithium-cooled space-power systems in which boiling potassium serves as the Rankine-cycle fluid. Studies in support of the sodium-cooled fast breeder reactor are designed (1) to determine the effects of interstitial impurities in sodium on the mechanical and corrosion properties of vanadium alloys and (2) to investigate the interactions of 300 series stainless steels, commercial insulation, and sodium in air at 600 to 800°C. Studies in support of space-power systems are centered around refractory-metal containment materials, in particular, tantalumand tungsten-base alloys. Our principal objective is to study the conditions affecting thermal-gradient mass transfer to refractory alloys in lithium in the temperature range 1200 to 1650°C. A small effort has been included on boihng potassium systems to bring this portion of the program to an orderly conclusion.

2011: The Strongest Model of Computation Obeying 0-1 Principles
Abstract: None

2011: On Centralized Smooth Scheduling
Abstract: None

2011: Characterizations of Generalized Butter y Networks
Abstract: A multistage network is a Generalized Butterry Network (GBN) if there are 2 n end-to-end paths, (P 0 ; P 1 ; ; P n?1), that cover all the vertices and are vertex disjoint and for any two consecutive stages k and k + 1 there is an integer`s.t. the k-th vertex of P i is adjacent to the (k + 1)-th vertex of P j ii the binary presentations of i and j diier at most at thè-th bit. The GBN family contains most of the important interconnection networks including the Butterry networks, the Bene s networks and the Batcher bitonic sorting networks. This work establishes several characterizations and properties of the GBN family that were previously unknown even for the special case of the Butterry. One characterization is based on automorphism as follows: A multistage network G is a GBN ii it is 2-regular and for any two end-to-end paths, P 0 and P 00 , there is an automorphism of G that swaps P 0 and P 00. Another one is based on the existence of paths that shortcut or bypass a certain path and yet anther is based on a certain symmetry of the distance function. These results, and all the other results of this work, are founded on the Layered Cross Product (LCP) introduced by Even and Litman. It is sometimes useful to assign labels to the vertices or edges of a network. A notable example is the min/max labeling of the edges of a comparator network. To facilitate the study of labeled multistage networks we introduce the Labeled LCP which is an associative and commutative variant of the LCP that operates on vertex-labeled or edge-labeled multistage networks. We show that, under certain conditions, this operator commutes with the concatenation operator. Building on that, we show that the Batcher bitonic sorting network with its min/max labeling is a product of very simple labeled networks { bamboos or rosaries. Moreover, this network, as well as any network which is a product of labeled rosaries under a certain algebra of labels, satisses a variant of the above path swapping property. Namely, for any two end-to-end paths having identical labels at each stage, there is a label-preserving automorphism that swaps these paths.

2011: Bitonic sorters of minimal depth
Abstract: None

2011: Bitonic Sorting Network
Abstract: None

2009: Smooth Scheduling under Variable Rates or the Analog-Digital Confinement Game
Abstract: None

2009: Accelerating certain outputs of merging and sorting networks
Abstract: None

2009: On smooth sets of integers
Abstract: None

2007: Optimal conclusive sets for comparator networks
Abstract: None

2006: Smooth scheduling under variable rates or the analog-digital confinement game
Abstract: This work considers non-terminating scheduling problems in which a system of multiple resources serves clients having variable needs. The system has m identical resources and n clients; in each time slot each resource may serve at most one client; in each such slot t each client γ has a rate, a real number ργ(t), that specifies his needs in this slot. The rates satisfy the restriction Eγργ(t) ≤ m for any slot t. Except of this restriction, the rates can vary in arbitrary fashion. (This contrasts most prior works in this area in which the rates of the clients are constant.) The schedule is required to be smooth as follows: a schedule is Δ-smooth if for all time intervals I the absolute difference between the amount of service received by each client γ to his nominal needs of Et∈I ργ(t) is less than Δ. Our objective are online schedulers that produce Δ-smooth schedules where Δ is a small constant which is independent of m and n.Our paper constructs such schedulers; these are the first online Δ-smooth schedulers, with a constant Δ, for clients with arbitrarily variable rates in a single or multiple resource system. Furthermore, the paper also considers a non-concurrent environment in which there is an additional restriction that each client is served at most once in each time slot; it presents the first online smooth schedulers for variable rates under this restriction.The above non-concurrent restriction is crucial in some applications (e.g., CPU scheduling). It has been pointed out that this restriction "adds a surprising amount of difficulty" to the scheduling problem. However, this observation was never formalized and, of course, was never proved. This paper formalizes and proves some aspects of this observation.Another contribution of this paper is the introduction of a complete information, two player game called the analog-digital confinement game. In such a game pebbles are located on the real line; the two players, the analog player and the digital player, take alternating turns and each one, in his turn, moves some of the pebbles; the digital player moves the pebbles backwards by discrete distances while the analog player moves the pebbles forward by analog distances; the aim of the analog player is to cause one pebble (or more) to escape a pre-defined real interval while the aim of the digital player is to confine the pebbles into the interval. This game is a convenient framework to study the general question of how to approximate an analog process by a digital one. All the above scheduling results are established via this game. In this derivation, the pebbles represent the clients, the analog player represents the needs of the clients and the digital player represents the scheduler.

2006: Parceling the Butterfly and the Batcher Sorting Network
Abstract: None

2005: On distributed smooth scheduling
Abstract: This paper studies evenly distributed sets of natural numbersand their applications to scheduling in a distributed environment.Such sets, called smooth sets, have the property that theirquantity within each interval is proportional to the size of theinterval, up to a bounded additive deviation; namely, forπ,Δ ∈ R a set A of natural numbers is(π, Δ)-smooth if abs(&vbar;I&vbar; ·π-- &vbar;I∩A&vbar;) 9 Δ for anyinterval I ⊂ N.
The current paper studies scheduling <i>persistentclients</i> on a single slot-oriented<i>resource</i> in a flexible, predictable anddistributed manner. Each client γ has a given<i>rate</i> ρ<sub>γ</sub> thatdefines the share of the resource he is entitled to receive and thegoal is a smooth schedule in which, for some predefined Δ,each client γ is served in aρ<sub>γ</sub>,Δ)-smooth set of slots(natural numbers). The paper focuses on a <i>distributedenvironment</i> where each client by itself (without anyinter-client communication) <i>resolves</i> (computes),slot after slot, whether or not it owns this slot. The paperpresents extremely efficient schedules under which a clientresolves each slot in a constant time.
The paper considers two scheduling frameworks. The first one,the <i>Flat Scheduling Framework</i>, is the commonproblem where the rates of the clients are given a priori. In thesecond and novel framework, the <i>Open-Market SchedulingFramework</i>, fractions of the resource are bought and soldby <i>dealers</i>. Each dealer, upon receiving his setof slots, may choose either to become a client and use his share,or to remain a dealer and sell fractions of his share to otherdealers. In this framework, the allocation process is highlydistributed; moreover, fractions of several resources can becombined into a single virtual resource of new capabilities.
The paper presents two scheduling techniques. Both techniques,in both frameworks, produce smooth schedules with highly efficientdistributed resolutions --- a client resolves each slot in<i>O</i>(1) time on a RAM with a moderate number ofmemory words, all of a small size. Each technique has its pros andcons. For example, one technique utilizes 100% of the resource butits resolution algorithm requires a number of words which is linearin the number of clients; the other technique utilizes only 99% ofthe resource but its resolution algorithm requires just<i>O</i>(1) words.
One of these techniques yields a solution to Tijdeman'sHierarchial Chairman Assignment Problem which outperforms priorsolutions. The other technique naturally extends to the problem ofscheduling multiple resources, under the restriction that a clientmay be served concurrently by at most one resource. The extensionyields the first solution to this problem having efficientdistributed resolution. Prior solutions produce a special type ofsmooth scheduling called <i>P-fair scheduling</i>, arecentralized, and are less efficient than ours.

2005: On the capabilities of systolic systems
Abstract: None

2002: Large scale clock skew scheduling techniques for improved reliability of digital synchronous VLSI circuits
Abstract: This paper compares several methods for determining an optimal non-zero clock skew schedule for synchronous digital VLSI circuits. The optimality of a given clock skew schedule which satisfies the circuit timing constraints is defined from the perspective of circuit timing reliability. This optimality is characterized by the deviation of the computed clock schedule from an 'ideal' objective clock schedule. Both linear and quadratic programming (LP and QP) formulations of the clock skew scheduling problem are analyzed and a novel LP formulation is introduced. These formulations are compared using the ISCAS'89 suite of benchmark circuits. Mathematical optimization results are calculated using the large scale optimization package Lancelot.

2001: Exposed Layouts of the Butterfly Network
Abstract: This work studies layouts of the Butterfly network under the restriction that its input and output verticles are exposed, that is, are placed on the boundary of the grid. Avior et al. have shown that the minimal area of a layout of the n-input Butterfly, without the above restriction, is (1 + o(1))n2). The effect of this restriction on the area was left as an open question. This paper reveals that exposing the input and output vertices is essentially free. That is, it presents an exposed layout of the Butterfly having the same area as above. In this layout, the fractions of the input and output vertices assigned to each side of the grid are as follows when scanning the sides in a circular fashion: half of the inputs, half of the outputs, half of the inputs, and half of the outputs. We refer to such a layout as a -layout. The main technique employed in this layout is the reduction of the layout problem of the Butterfly to a certain layout problem of a complete bipartite graph. We use the same technique to produce a (I, 0, O, 0)-layout (inputs on one side and outputs on the opposite side) in area 2 + o(1))n2. Finally, we show that the area of a -layout is greater than . Hence, this input-output configuration is more area-demanding than .

2001: Fast, minimal and oblivious routing algorithms on the mesh with bounded queues
Abstract: This paper studies fast, deterministic, permutation routing algorithms with bounded queues on the n × n mesh. Our main result is an &Ogr;(n)-step, strongly-dimensional (and thus also source-oblivious and minimal) permutation routing algorithm. This algorithm works under a relaxed model in which nodes can freely send data to their neighbors.
In a more prevalent model, the standard model, data may be sent only when accompanied by a packet. Under this model we present the following two algorithms: An &Ogr;(n log n)- step strongly-dimensional algorithm and an &Ogr;(n)-step oblivious and weakly-dimensional (and thus also minimal) algorithm.
As said, all these algorithms store only &Ogr;(l) packets in a node. Moreover, they use only &Ogr;(log n) state bits in a node and transfer only &Ogr;(log n) data bits on an edge in a step.
All our routing algorithms are based on the following new technique of open-loop flow control. An algorithm is composed of two stages: setup and transportation.
The setup stage computes certain values and stores them in the network. In particular, it computes a rational number α(e) for certain critical edges e.
The transportation stage moves the packets to their destinations. It uses the computed values to slow the packets so that the traffic on each critical edge e is bounded by α(e); that is, at most [α(e).l] packets traverse e during any l consecutive steps.
This bound on the burstiness of the traffic enables the algorithm to avoid hot spots and maintain bounded queues. The algorithm achieves this by an open-loop control: that is, during this stage no information is transferred in a direction opposite to that of the packets.
An additional novelty of our algorithms is the application of a dynamic routing problem to solve a static one. The dynamic problem in question seems easy, as its network is just a linear array. We show, however, that this problem is unsolvable by the techniques of Adversarial Queuing Theory.

1998: On the Bisection Width and Expansion of Butterfly Networks
Abstract: None

1998: Optimal Mistake Bound Learning is Hard
Abstract: Abstract This paper provides evidence that there is no polynomial-time optimal mistake bound learning algorithm. This conclusion is reached via several reductions as follows.  Littlestone (1988, Math. Learning 2 , 285–318) has introduced a combinatorial function K from classes to integers and has shown that if a subroutine computing K is given, one can construct a polynomial-time optimal MB learning algorithm. We establish the reverse reduction. That is, given an optimal MB learning algorithm as a subroutine, one can compute K in polynomial time. Our result combines with Littlestone's to establish that the two tasks above have the same time complexity up to a polynomial.  Next, we show that the VC-dimension decision problem is polynomially reducible to the K -decision problem. Papadimitriou and Yannakakis [PY93] have provided a strong evidence that the VC-dimension decision problem is not in P. Therefore, it is very unlikely that there is a polynomial-time optimal mistake bound learning algorithm

1998: Combinatorial Variability of Vapnik-chervonenkis Classes with Applications to Sample Compression Schemes
Abstract: None

