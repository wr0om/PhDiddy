Recent papers for Rom Raphael:

2014: LiMoSense: live monitoring in dynamic sensor networks
Abstract: None

2014: The Impact of Unsecured Lending on the Financial Wellbeing of Consumers.
Abstract: .......................................................................................................................... ii

2011: LiMoSense: live monitoring in dynamic sensor networks
Abstract: None

2011: Distributed data clustering in sensor networks
Abstract: None

2010: Distributed data classification in sensor networks
Abstract: Low overhead analysis of large distributed data sets is necessary for current data centers and for future sensor networks. In such systems, each node holds some data value, e.g., a local sensor read, and a concise picture of the global system state needs to be obtained. In resource-constrained environments like sensor networks, this needs to be done without collecting all the data at any location, i.e., in a distributed, manner. To this end, we define the distributed classification problem, in which numerous interconnected nodes compute a classification of their data, i.e., partition these values into multiple collections, and describe each collection concisely. We present a generic algorithm that solves the distributed classification problem and may be implemented in various topologies, using different classification types. For example, the generic algorithm can be instantiated to classify values according to distance, like the famous k-means classification algorithm. However, the distance criterion is often not sufficient to provide good classification results. We present an instantiation of the generic algorithm that describes the values as a Gaussian Mixture (a set of weighted normal distributions), and uses machine learning tools for classification decisions. Simulations show the robustness and speed of this algorithm. We prove that any implementation of the generic algorithm converges over any connected topology, classification criterion and collection representation, in fully asynchronous settings.

2009: Analysis of performance trade-offs for an adaptive channel-aware wireless scheduler
Abstract: None

2007: OPTIMAL PACKET FRAGMENTATION IN COMPUTER NETWORKS
Abstract: The packet fragmentation problem in computer networks is that of breaking a packet into smaller pieces (fragments) due to packet size limitations along the packet’s route. This is a typical internetworking problem. We show that the commonly used simplistic approach whereby the routing and fragmentation functions operate completely independently is far from being efficient and has adverse effects on network performance. This paper deals with the combined fragmentation-and-routing problem. We discuss several possible fragmentation machines and indicate their equivalence. This enables the formulation of a comprehensive yet tractable flows model, whose performance measure is total network delay. An analysis of this model leads to necessary and sufficient optimality conditions for the fragmentationand-routing problem. The optimality conditions serve as a baseline for devising several optimal algorithms, both centralized and distributed. To deal with minimum first derivative length algorithms, we generalize the concept of minimum first derivative paths in order to accommodate them into our environment. Several special cases of practical interest are discussed. We show how the problem size and the running time of the algorithms are considerably shortened in networks in which packet sizes come in a limited number of sizes. We also show how our approach can accommodate performance measures other than total delay. The case of networks with virtual circuits is also discussed.

2007: Average Case Analysis of Bounded Space Bin Packing Algorithms
Abstract: None

2006: Deleting Files in the Celeste Peer-to-Peer Storage System
Abstract: None

2006: Design and analysis of a class-aware recursive loop scheduler for class-based scheduling
Abstract: None

2005: Maintaining object ordering in a shared P2P storage environment
Abstract: To be considered a viable storage solution, modern peer-to-peer (P2P) storage systems must exhibit high availability and data persistence characteristics. In an attempt to provide these, most systems assume a continuously connected and available underlying communication infrastructure. This however is not warranted in any real large-scale distributed system, and thus needs to be addressed. Continuous update systems that allow updating data by multiple writers have harder problems to overcome since the ordering of updates needs to be maintained independently of connectivity conditions. In this paper we propose a solution for maintaining a global view of the ordering even when severe connectivity disruptions take place, allowing the system to continue functioning while connectivity is disrupted and to recover from the disruption smoothly when connectivity is restored. To this end, we introduce and discuss three new concepts to the realm of P2P storage systems: 1) the maintenance of additional state information to detect and trace object updates during partitioning, 2) the usage of active decentralized object replication through shadow roots, and 3) the deployment of cryptographic technologies to allow for the recovery of private state information

2004: Stochastic analysis and performance evaluation of wireless schedulers
Abstract: In the last few years, wireless scheduling algorithms have been proposed by supplementing wireline scheduling algorithms with a wireless adaptation scheme. However, Quality of Service (QoS) bounds have either been derived for flows that perceive error-free conditions or a static worst-case channel condition. Such an assumption of the channel condition is unrealistic, since channel errors are known to be bursty in nature. Hence, these bounds are inadequate to characterize the scheduler's QoS performance. Our research focuses on performing an extensive analysis of wireless scheduling in order to derive statistical QoS performance bounds under realistic channel conditions. In this paper, we develop stochastic models for various wireless schedulers. Based on these models, we define and evaluate statistical QoS performance metrics in terms of throughput, delay and fairness under various channel conditions and over different time scales. Numerical results indicate that no single scheduler outperforms the others in terms of all the QoS metrics under all channel conditions. The choice of an optimal scheduling mechanism depends on the priority of QoS requirements as well as the channel conditions. Copyright © 2004 John Wiley & Sons, Ltd.

2004: Performance Analysis of a Recursive Cyclic Scheduler for Class-based Scheduling
Abstract: In this paper, we consider the problem of determining a cyclic (or loop) sc heduler that allocates slots to flows as periodically as possible. We use the second moment of the inter-allocation distance for each flow as its periodicity metric. We establish the optimality of a Weighted-Round Robin with spreading ( WRR-sp2) scheduler for a two-flow scenario. We consider a class-based scheduling scenario where flows are grou ped according to their relative bandwidth demands. We propose aC-class scheduler that recursively performs inter-class scheduling u si the corresponding C-1 class scheduler, prior to intra-class scheduling. Optimality is achieved for C = 2 with theWRR-sp2 as the inter-class scheduler. Through numerical results, we show that the recursive scheduler ac hieves the best periodicity performance at the expense of intra-class fairness, which is desirable for class-based scheduling. T hereby, we expose a trade-off between periodicity and fairness performance in the design of loop schedulers. I. I NTRODUCTION Consider a system that comprises an indivisible resource (t ime-slot) andn clients (or flows) share it by means of time multiplexing: in any given time, a different flow may use the r esource. Many applications require that flows are served at s ome prescribed rate, and this rate should be as smooth as possibl e even in small time windows. The allocation of time slots to fl ows is governed by a scheduling algorithm. In other words, given a set of requested shares, {x}i=1, the goal of the scheduling algorithm is to produce an assignment of time slots (or a sche dule) to flows, while trying to optimize two different measur es: (a) Fairness: a schedule is said to have good fairness if the fraction of ti me slots allocated to each flow is close to its requested share; (b) Smoothness : a schedule is said to have good smoothness if the time slots a l cated to each flow are as evenly spaced as possible. The best possible schedule is one where the allocated shares are exactly the requested shares (perfect fairness) and whe re each flow is scheduled exactly every p time slots (perfectly-periodic schedule). Although sched ul s that offer fairness while neglecting smoothness are available [1], it is NP-complete to decide whether a set of requests admits a perfectly-perio dic schedule [2]. A. Perfectly Periodic Scheduling Two approaches to the scheduling problem are considered in t he literature. The first approach insists on maintaining str ict smoothness while relaxing the fairness requirement. In [3] (and references therein), each flow i requests that it be scheduled exactly everyτ (i) time slots, and the goal is to determine a scheduler that opti mizes the fairness measure under the perfect periodicity constraint. Strict smoothness requirements i mply that the periods allocated to some flows will not match th eir requests. A suitable metric to measure the deviation from pe rfect fairness for each flow is the fairness ratio, given by th e ratio of its requested period and its granted period. There exist s chedulers [4] that guarantee that the average fairness rati o (where the weight of each flow is its requested bandwidth) is close to optimal. The maximum measure is studied in [5], where the quality of the schedule is the worst-case fairness ratio ove r all flows. B. Non-Periodic Scheduling An alternative approach is to allow different gaps between c o secutive allocations to a flow, while insisting on perfect fairness. This approach was considered in [6] (and referenc s therein), where the authors considered an online variant of the resource sharing problem. Given that the arrival process of packets to each flow is independent and identically distribu ted (i.i.d), the goal is to determine a scheduler that optimizes some performance criteria under the perfect fairness const rai t. In [7], the author deduced that for throughput optimality fo r n=2 and unit buffer size per queue, the schedule must be open-loop(or de-centralized) andconflict-free. This work was extended in [8] to the case of n>2. It was also verified that an optimal schedule always exists and is stationary and cyclic (or loop), i.e., there exists an N such that for allt, the flow allocated to slotτ is also allocated to slot τ+N.

2004: Performance Analysis of a Recursive Loop Scheduler for Class-based Scheduling
Abstract: In this paper, we consider the problem of determining a cyclic (or loop) scheduler that allocates slots to flows as periodically as possible. We use the second moment of the inter-allocation distance for each flow as its periodicity metric. We establish the optimality of a Weighted-Round Robin with spreading (WRR-sp2) scheduler for a two-flow scenario. We consider a class-based scheduling scenario where flows are grouped according to their relative bandwidth demands. We propose a C-class scheduler that recursively performs inter-class scheduling using the corresponding C-1 class scheduler, prior to intra-class scheduling. Optimality is achieved for C = 2 with the WRR-sp2 as the inter-class scheduler. Through numerical results, we show that the recursive scheduler achieves the best periodicity performance at the expense of intra-class fairness, which is desirable for class-based scheduling. Thereby, we expose a trade-off between periodicity and fairness performance in the design of loop schedulers.

2004: Framework for performance analysis of channel-aware wireless schedulers
Abstract: Although many wireless channel-state dependent (CSD) schedulers have been proposed recently, their contributions lie in the design of the scheduling mechanism to meet some performance objectives. However, these objectives are often first-order statistics such as average or worst-case delay, which are insufficient to characterize the scheduler's performance. In this paper, we propose a matrix formulation to derive the delay probability density function for CSD schedulers over a Markovian wireless channel. Our analysis is then used to determine the admissibility of a wireless scheduler in terms of a minimum throughput requirement and a real-time QoS requirement. In addition, we evaluate the buffer size requirement of the wireless receiver and highlight the trade-off between buffer size requirements and channel efficiency.

2004: Analysis of Trade-offs between Buffer and QoS Requirements in Wireless Networks
Abstract: In this paper, we consider the scheduling problem where data packets from K input ﬂows need to be delivered to K corresponding wireless receivers over a heterogeneous wireless channel. Our objective is to design a wireless scheduler that optimizes the buffer requirement at each wireless receiver while maintaining good throughput performance. This is a challenging problem due to the unique characteristics of the wireless channel. We propose a novel idea of exploiting both the long-term and short-term error behavior of the wireless channel in the scheduler design. In addition to typical ﬁrst-order Quality of Service (QoS) metrics such as throughput and delay, our performance analysis of the scheduler permits the evaluation of higher-order metrics, which are needed to evaluate the buffer requirement. We show that the proposed scheduler achieves high overall throughput as well as low buffer requirement when compared to other wireless schedulers that only make use of the instantaneous channel state in a heterogenous channel.

2003: Performance tradeoffs in wireless scheduling with flow aggregration
Abstract: We develop Markov models for various schedulers in order to evaluate their performance tradeoffs at wireless links. While FIFO scheduling aggregates flows into a single flow just prior to the wireless link, channel-state dependent (or CSD) schedulers maintain a queue for each flow, and use predicted channel information to make scheduling decisions. We present results of tradeoffs in terms of overall throughput and per-flow QoS performance obtained with each scheduler under different channel conditions.

2002: Performance Evaluation of Wireless Fair Scheduling
Abstract: Recently, several wireless scheduling algorithms have been proposed. It is important to evaluate their performance to establish the QoS provision capabilities of wireless networks. In this paper, we define a Wired-Fair scheduling scheme which is fair and but not channel-efficient, a ChannelEfficient scheduling scheme which is not fair and a WirelessFair scheduling scheme that is both channel-efficient and fair. We evaluate their performance under different channel conditions for a symmetric two-flow scheduling scenario in terms of channel-efficiency and fairness.

2002: Application-aware admission control and scheduling in Web servers
Abstract: This paper presents an architecture and algorithms for optimizing the performance of Web services. For a given service, session-based admission control is combined with stage-wise request queuing, where the stages represent sub-tasks within sessions. The scheduling of requests is governed by generalized processor sharing. We present a performance model, relying on online estimation of parameters describing client-server interaction. A reward function corresponding to the service provider's objective is maximized using techniques for nonlinear optimization. In a case study, we model and optimize the resource sharing at a Web server hosting an electronic store. The performance advantages of our approach are quantified numerically, and the robustness to parameter estimation errors is assessed by sensitivity analysis.

2002: Scheduling constant bit rate flows in data over cable networks
Abstract: The Data Over Cable Systems Interface Specification (DOCSIS) is the leading standard for data over cable networks. We consider the problem of scheduling constant bit rate (CBR) flows in a DOCSIS compliant cable network. CBR flows are required to support the delivery of voice and other real-time applications that generate fixed size data packets on a periodic basis. The primary application of CBR flows is voice over IP (VoIP) which cable operators intend to use in order to provide cable telephony services. DOCSIS 1.1 is enhanced with quality of service (QoS) capabilities; it defines the unsolicited grant service as the mechanism for supporting CBR flows. The scheduling algorithms, however, are not defined by the standard. We present the scheduling problem and examine several interesting special cases of it. We show that deciding whether a set of CBR flows can be legally scheduled is NP-complete whenever there are two or more different grant intervals. We model the scheduling problem as a variant of bin packing where bin sizes can be modified in a constrained manner This model enables the development of scheduling algorithms which are based on known algorithms for bin packing. We present an algorithm based on the next-fit algorithm and investigate its performance. We show that under certain assumptions which typically hold for VoIP and many other practical applications, a simple polynomial time scheduling algorithm is sufficient.

